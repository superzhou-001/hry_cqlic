<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hry.admin.ico.dividend.dao.IcoDividendRecordDao">
    <select id="findPageBySql" parameterType="java.util.Map" resultType="hry.admin.ico.dividend.model.IcoDividendRecord" >
        select ir.id id,
        ir.customer_id customer_id,
        ap.email customer_email ,
        ap.mobilePhone customer_mobile,
        ir.customer_level customer_level,
        ir.hedgeQuantity hedgeQuantity,
        ir.grossCommission grossCommission,
        ir.coinCode coinCode,
        ir.dividend_radix dividend_radix,
        ir.dividend_num dividend_num,
        ir.created created
        from ico_dividend_record  ir
        LEFT JOIN app_person_info ap on ir.customer_id=ap.customerId
        <where>
            1 = 1
            <if test="customer_email!=null and customer_email!='' " >
                and ap.email like #{customer_email,jdbcType=VARCHAR}
            </if>
            <if test="customer_mobile!=null and customer_mobile!='' " >
                and ap.mobilePhone like #{customer_mobile,jdbcType=VARCHAR}
            </if>
            <if test="coinCode!=null and coinCode!='' " >
                and ir.coinCode = #{coinCode,jdbcType=VARCHAR}
            </if>
            <if test="startTime!=null and startTime!='' " >
                and ir.created <![CDATA[ >= ]]> #{startTime,jdbcType=DATE}
            </if>
            <if test="endTime!=null and endTime!='' " >
                and ir.created <![CDATA[ <= ]]> #{endTime,jdbcType=DATE}
            </if>
        </where>
        ORDER BY ir.created desc
    </select>



    <select id="expenditureAccount" parameterType="java.util.Map" resultType="java.util.Map" >
        SELECT * FROM
            (
                SELECT
                    coinCode coinCode,
                    sum(IFNULL(dividend_radix,0.0000000000)) num ,
                    MAX(created) created
                from ico_dividend_record
                GROUP BY coinCode

                UNION ALL

                SELECT
                    coinCode coinCode,
                    sum(IFNULL(award_quantity,0.0000000000)) num ,
                    MAX(created) created
                from ico_award_record
                GROUP BY coinCode
            ) AS t
        <where>
            1 = 1

            <if test="coinCode!=null and coinCode!='' " >
                and coinCode like #{coinCode,jdbcType=VARCHAR}
            </if>

        </where>
    </select>

</mapper>
